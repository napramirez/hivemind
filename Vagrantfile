# -*- mode: ruby -*-
# vi: set ft=ruby :

# Define the network params
PRIVATE_NETWORK = "192.168.50.*"
PRIVATE_NETWORK_START = 100

# Define the control
$control = {
  :hostname   => "control",
  :ip_address => PRIVATE_NETWORK.sub('*', PRIVATE_NETWORK_START.to_s)
}

# Define the number of drones
DRONE_HOSTNAME = "drone"
$drone_count = 1
$drones = []

# Define the drone hash
1.upto($drone_count) do |drone_index|
  $drones.push({
    :hostname   => DRONE_HOSTNAME+drone_index.to_s.rjust(2, '0'),
    :ip_address => PRIVATE_NETWORK.sub('*', (PRIVATE_NETWORK_START+drone_index).to_s)
  })
end

# Create the ansible hosts file
File.open("ansible.hosts", "w+") do |f|
  f.write("# Generated by Hivemind\n\n")
  f.write("control\n\n")
  f.write("[drones]\n")
  $drones.each do |drone|
    f.write("#{drone[:hostname]}\n")
  end
  f.close
end

# Create the intermediary system hosts file
File.open("system.hosts", "w+") do |f|
  f.write("#{$control[:ip_address]}\t#{$control[:hostname]}\n")
  $drones.each do |drone|
    f.write("#{drone[:ip_address]}\t#{drone[:hostname]}\n")
  end
  f.close
end

# Main
Vagrant.configure(2) do |config|

  # Control
  config.vm.define $control[:hostname], primary: true do |control_config|
    control_config.vm.box = "dhoppe/ubuntu-14.04.2-amd64-nocm"
    control_config.vm.network "private_network", ip: $control[:ip_address], virtualbox__intnet: true
    control_config.vm.provision "shell", path: "scripts/update-system-hosts.sh"
    control_config.vm.provision "shell", path: "scripts/install-ansible.sh"
    control_config.vm.provision "shell", path: "scripts/post-install-ansible.sh"
    control_config.vm.provision "shell", path: "scripts/setup-control-ssh.sh"
  end

  # Drones
  $drones.each do |drone|
    config.vm.define drone[:hostname] do |drone_config|
      drone_config.vm.box = "dhoppe/ubuntu-14.04.2-amd64-nocm"
      drone_config.vm.network "private_network", ip: drone[:ip_address], virtualbox__intnet: true
      drone_config.vm.provision "shell", path: "scripts/update-system-hosts.sh"
      drone_config.vm.provision "shell", inline: "sudo apt-get install -y python-simplejson"
      drone_config.vm.provision "shell", path: "scripts/setup-drone-ssh.sh"
    end
  end

end
